//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторного создания кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReference1
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://artefacts.russiatourism.ru/services/message-exchange/", ConfigurationName="ServiceReference1.EPIntegrationServicePortTypeAsync")]
    public interface EPIntegrationServicePortTypeAsync
    {
        
        // CODEGEN: Создание контракта сообщения, так как операция checkState не является ни RPC, ни упакованным документом.
        [System.ServiceModel.OperationContractAttribute(Action="urn:checkState", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CommonDictionaryResponse))]
        ServiceReference1.checkStateResponse checkState(ServiceReference1.checkStateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:checkState", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.checkStateResponse> checkStateAsync(ServiceReference1.checkStateRequest request);
        
        // CODEGEN: Создание контракта сообщения, так как операция getDictionary не является ни RPC, ни упакованным документом.
        [System.ServiceModel.OperationContractAttribute(Action="urn:getDictionary", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CommonDictionaryResponse))]
        ServiceReference1.getDictionaryResponse1 getDictionary(ServiceReference1.getDictionaryRequest1 request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:getDictionary", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.getDictionaryResponse1> getDictionaryAsync(ServiceReference1.getDictionaryRequest1 request);
        
        // CODEGEN: Создание контракта сообщения, так как операция updateDictionary не является ни RPC, ни упакованным документом.
        [System.ServiceModel.OperationContractAttribute(Action="urn:updateDictionary", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CommonDictionaryResponse))]
        ServiceReference1.updateDictionaryResponse1 updateDictionary(ServiceReference1.updateDictionaryRequest1 request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:updateDictionary", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.updateDictionaryResponse1> updateDictionaryAsync(ServiceReference1.updateDictionaryRequest1 request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://artefacts.russiatourism.ru/services/message-exchange/")]
    public partial class CheckActionStateRequest
    {
        
        private string requestIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string requestId
        {
            get
            {
                return this.requestIdField;
            }
            set
            {
                this.requestIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://artefacts.russiatourism.ru/services/message-exchange/")]
    public partial class UpdateDictionaryRequest
    {
        
        private string dictIdField;
        
        private string versionField;
        
        private string actionTypeField;
        
        private byte[] dictFileField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string dictId
        {
            get
            {
                return this.dictIdField;
            }
            set
            {
                this.dictIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string version
        {
            get
            {
                return this.versionField;
            }
            set
            {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public string actionType
        {
            get
            {
                return this.actionTypeField;
            }
            set
            {
                this.actionTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", Order=3)]
        public byte[] dictFile
        {
            get
            {
                return this.dictFileField;
            }
            set
            {
                this.dictFileField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://artefacts.russiatourism.ru/services/message-exchange/")]
    public partial class GetDictionaryRequest
    {
        
        private string dictIdField;
        
        private string versionField;
        
        private string exportTypeField;
        
        private System.DateTime dictFromDtField;
        
        private bool dictFromDtFieldSpecified;
        
        private System.DateTime dictToDtField;
        
        private bool dictToDtFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string dictId
        {
            get
            {
                return this.dictIdField;
            }
            set
            {
                this.dictIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string version
        {
            get
            {
                return this.versionField;
            }
            set
            {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public string exportType
        {
            get
            {
                return this.exportTypeField;
            }
            set
            {
                this.exportTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3)]
        public System.DateTime dictFromDt
        {
            get
            {
                return this.dictFromDtField;
            }
            set
            {
                this.dictFromDtField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dictFromDtSpecified
        {
            get
            {
                return this.dictFromDtFieldSpecified;
            }
            set
            {
                this.dictFromDtFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4)]
        public System.DateTime dictToDt
        {
            get
            {
                return this.dictToDtField;
            }
            set
            {
                this.dictToDtField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dictToDtSpecified
        {
            get
            {
                return this.dictToDtFieldSpecified;
            }
            set
            {
                this.dictToDtFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetDictionaryResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateDictionaryResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CheckActionStateResponse))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://artefacts.russiatourism.ru/services/message-exchange/")]
    public partial class CommonDictionaryResponse
    {
        
        private string requestIdField;
        
        private System.DateTime generatedAtField;
        
        private string errorCodeField;
        
        private string errorMessageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string requestId
        {
            get
            {
                return this.requestIdField;
            }
            set
            {
                this.requestIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public System.DateTime generatedAt
        {
            get
            {
                return this.generatedAtField;
            }
            set
            {
                this.generatedAtField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public string errorCode
        {
            get
            {
                return this.errorCodeField;
            }
            set
            {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3)]
        public string errorMessage
        {
            get
            {
                return this.errorMessageField;
            }
            set
            {
                this.errorMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://artefacts.russiatourism.ru/services/message-exchange/")]
    public partial class GetDictionaryResponse : CommonDictionaryResponse
    {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://artefacts.russiatourism.ru/services/message-exchange/")]
    public partial class UpdateDictionaryResponse : CommonDictionaryResponse
    {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://artefacts.russiatourism.ru/services/message-exchange/")]
    public partial class CheckActionStateResponse : CommonDictionaryResponse
    {
        
        private string actionTypeField;
        
        private string actionStatusField;
        
        private byte[] dictFileField;
        
        private string dictIdField;
        
        private string versionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string actionType
        {
            get
            {
                return this.actionTypeField;
            }
            set
            {
                this.actionTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string actionStatus
        {
            get
            {
                return this.actionStatusField;
            }
            set
            {
                this.actionStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", Order=2)]
        public byte[] dictFile
        {
            get
            {
                return this.dictFileField;
            }
            set
            {
                this.dictFileField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3)]
        public string dictId
        {
            get
            {
                return this.dictIdField;
            }
            set
            {
                this.dictIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4)]
        public string version
        {
            get
            {
                return this.versionField;
            }
            set
            {
                this.versionField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class checkStateRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://artefacts.russiatourism.ru/services/message-exchange/", Order=0)]
        public ServiceReference1.CheckActionStateRequest CheckActionStateRequestEL;
        
        public checkStateRequest()
        {
        }
        
        public checkStateRequest(ServiceReference1.CheckActionStateRequest CheckActionStateRequestEL)
        {
            this.CheckActionStateRequestEL = CheckActionStateRequestEL;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class checkStateResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://artefacts.russiatourism.ru/services/message-exchange/", Order=0)]
        public ServiceReference1.CheckActionStateResponse CheckActionStateResponseEL;
        
        public checkStateResponse()
        {
        }
        
        public checkStateResponse(ServiceReference1.CheckActionStateResponse CheckActionStateResponseEL)
        {
            this.CheckActionStateResponseEL = CheckActionStateResponseEL;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getDictionaryRequest1
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://artefacts.russiatourism.ru/services/message-exchange/", Order=0)]
        public ServiceReference1.GetDictionaryRequest GetDictionaryRequestEL;
        
        public getDictionaryRequest1()
        {
        }
        
        public getDictionaryRequest1(ServiceReference1.GetDictionaryRequest GetDictionaryRequestEL)
        {
            this.GetDictionaryRequestEL = GetDictionaryRequestEL;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getDictionaryResponse1
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://artefacts.russiatourism.ru/services/message-exchange/", Order=0)]
        public ServiceReference1.GetDictionaryResponse GetDictionaryResponseEL;
        
        public getDictionaryResponse1()
        {
        }
        
        public getDictionaryResponse1(ServiceReference1.GetDictionaryResponse GetDictionaryResponseEL)
        {
            this.GetDictionaryResponseEL = GetDictionaryResponseEL;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class updateDictionaryRequest1
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://artefacts.russiatourism.ru/services/message-exchange/", Order=0)]
        public ServiceReference1.UpdateDictionaryRequest UpdateDictionaryRequestEL;
        
        public updateDictionaryRequest1()
        {
        }
        
        public updateDictionaryRequest1(ServiceReference1.UpdateDictionaryRequest UpdateDictionaryRequestEL)
        {
            this.UpdateDictionaryRequestEL = UpdateDictionaryRequestEL;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class updateDictionaryResponse1
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://artefacts.russiatourism.ru/services/message-exchange/", Order=0)]
        public ServiceReference1.UpdateDictionaryResponse UpdateDictionaryResponseEL;
        
        public updateDictionaryResponse1()
        {
        }
        
        public updateDictionaryResponse1(ServiceReference1.UpdateDictionaryResponse UpdateDictionaryResponseEL)
        {
            this.UpdateDictionaryResponseEL = UpdateDictionaryResponseEL;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public interface EPIntegrationServicePortTypeAsyncChannel : ServiceReference1.EPIntegrationServicePortTypeAsync, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public partial class EPIntegrationServicePortTypeAsyncClient : System.ServiceModel.ClientBase<ServiceReference1.EPIntegrationServicePortTypeAsync>, ServiceReference1.EPIntegrationServicePortTypeAsync
    {
        
        /// <summary>
        /// Реализуйте этот разделяемый метод для настройки конечной точки службы.
        /// </summary>
        /// <param name="serviceEndpoint">Настраиваемая конечная точка</param>
        /// <param name="clientCredentials">Учетные данные клиента.</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public EPIntegrationServicePortTypeAsyncClient() : 
                base(EPIntegrationServicePortTypeAsyncClient.GetDefaultBinding(), EPIntegrationServicePortTypeAsyncClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.EPIntegrationServicePortAsync.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public EPIntegrationServicePortTypeAsyncClient(EndpointConfiguration endpointConfiguration) : 
                base(EPIntegrationServicePortTypeAsyncClient.GetBindingForEndpoint(endpointConfiguration), EPIntegrationServicePortTypeAsyncClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public EPIntegrationServicePortTypeAsyncClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(EPIntegrationServicePortTypeAsyncClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public EPIntegrationServicePortTypeAsyncClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(EPIntegrationServicePortTypeAsyncClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public EPIntegrationServicePortTypeAsyncClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceReference1.checkStateResponse ServiceReference1.EPIntegrationServicePortTypeAsync.checkState(ServiceReference1.checkStateRequest request)
        {
            return base.Channel.checkState(request);
        }
        
        public ServiceReference1.CheckActionStateResponse checkState(ServiceReference1.CheckActionStateRequest CheckActionStateRequestEL)
        {
            ServiceReference1.checkStateRequest inValue = new ServiceReference1.checkStateRequest();
            inValue.CheckActionStateRequestEL = CheckActionStateRequestEL;
            ServiceReference1.checkStateResponse retVal = ((ServiceReference1.EPIntegrationServicePortTypeAsync)(this)).checkState(inValue);
            return retVal.CheckActionStateResponseEL;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference1.checkStateResponse> ServiceReference1.EPIntegrationServicePortTypeAsync.checkStateAsync(ServiceReference1.checkStateRequest request)
        {
            return base.Channel.checkStateAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.checkStateResponse> checkStateAsync(ServiceReference1.CheckActionStateRequest CheckActionStateRequestEL)
        {
            ServiceReference1.checkStateRequest inValue = new ServiceReference1.checkStateRequest();
            inValue.CheckActionStateRequestEL = CheckActionStateRequestEL;
            return ((ServiceReference1.EPIntegrationServicePortTypeAsync)(this)).checkStateAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceReference1.getDictionaryResponse1 ServiceReference1.EPIntegrationServicePortTypeAsync.getDictionary(ServiceReference1.getDictionaryRequest1 request)
        {
            return base.Channel.getDictionary(request);
        }
        
        public ServiceReference1.GetDictionaryResponse getDictionary(ServiceReference1.GetDictionaryRequest GetDictionaryRequestEL)
        {
            ServiceReference1.getDictionaryRequest1 inValue = new ServiceReference1.getDictionaryRequest1();
            inValue.GetDictionaryRequestEL = GetDictionaryRequestEL;
            ServiceReference1.getDictionaryResponse1 retVal = ((ServiceReference1.EPIntegrationServicePortTypeAsync)(this)).getDictionary(inValue);
            return retVal.GetDictionaryResponseEL;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference1.getDictionaryResponse1> ServiceReference1.EPIntegrationServicePortTypeAsync.getDictionaryAsync(ServiceReference1.getDictionaryRequest1 request)
        {
            return base.Channel.getDictionaryAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.getDictionaryResponse1> getDictionaryAsync(ServiceReference1.GetDictionaryRequest GetDictionaryRequestEL)
        {
            ServiceReference1.getDictionaryRequest1 inValue = new ServiceReference1.getDictionaryRequest1();
            inValue.GetDictionaryRequestEL = GetDictionaryRequestEL;
            return ((ServiceReference1.EPIntegrationServicePortTypeAsync)(this)).getDictionaryAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceReference1.updateDictionaryResponse1 ServiceReference1.EPIntegrationServicePortTypeAsync.updateDictionary(ServiceReference1.updateDictionaryRequest1 request)
        {
            return base.Channel.updateDictionary(request);
        }
        
        public ServiceReference1.UpdateDictionaryResponse updateDictionary(ServiceReference1.UpdateDictionaryRequest UpdateDictionaryRequestEL)
        {
            ServiceReference1.updateDictionaryRequest1 inValue = new ServiceReference1.updateDictionaryRequest1();
            inValue.UpdateDictionaryRequestEL = UpdateDictionaryRequestEL;
            ServiceReference1.updateDictionaryResponse1 retVal = ((ServiceReference1.EPIntegrationServicePortTypeAsync)(this)).updateDictionary(inValue);
            return retVal.UpdateDictionaryResponseEL;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference1.updateDictionaryResponse1> ServiceReference1.EPIntegrationServicePortTypeAsync.updateDictionaryAsync(ServiceReference1.updateDictionaryRequest1 request)
        {
            return base.Channel.updateDictionaryAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.updateDictionaryResponse1> updateDictionaryAsync(ServiceReference1.UpdateDictionaryRequest UpdateDictionaryRequestEL)
        {
            ServiceReference1.updateDictionaryRequest1 inValue = new ServiceReference1.updateDictionaryRequest1();
            inValue.UpdateDictionaryRequestEL = UpdateDictionaryRequestEL;
            return ((ServiceReference1.EPIntegrationServicePortTypeAsync)(this)).updateDictionaryAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.EPIntegrationServicePortAsync))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Не удалось найти конечную точку с именем \"{0}\".", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.EPIntegrationServicePortAsync))
            {
                return new System.ServiceModel.EndpointAddress("http://10.111.13.18/nsiw/ws-nsi/EPInputWS");
            }
            throw new System.InvalidOperationException(string.Format("Не удалось найти конечную точку с именем \"{0}\".", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return EPIntegrationServicePortTypeAsyncClient.GetBindingForEndpoint(EndpointConfiguration.EPIntegrationServicePortAsync);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return EPIntegrationServicePortTypeAsyncClient.GetEndpointAddress(EndpointConfiguration.EPIntegrationServicePortAsync);
        }
        
        public enum EndpointConfiguration
        {
            
            EPIntegrationServicePortAsync,
        }
    }
}
